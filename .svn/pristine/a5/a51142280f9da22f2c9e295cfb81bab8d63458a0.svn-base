package com.qs.webside.api.controller;

import java.util.Map;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qs.common.constant.AppConstants;
import com.qs.common.constant.AppConstants.NotifyMsg;
import com.qs.webside.api.service.IAlipayService;
import com.qs.webside.api.service.IWePayService;
import me.hao0.wepay.util.Maps;


@Controller
@RequestMapping(value = "/api/pay/")
public class PayNotifyController {


    @Resource
    private IWePayService wePayService;
    
    @Resource
    private IAlipayService alipayService;


    private static final Logger logger = LoggerFactory.getLogger(PayNotifyController.class);



    /**
     * 支付成功通知
     * @param request 请求对象
     * @return 处理结果
     */
    @RequestMapping("/wxNotify.do")
    public String paid(HttpServletRequest request){
        String notifyXml = wePayService.getPostRequestBody(request);
        boolean resultFlag=true;
        String msg="";
        if (notifyXml.isEmpty()){
            return wePayService.notifyNotOk(AppConstants.NotifyMsg.BODY_ISNULL);
        }
        Map<String, Object> notifyParams = Maps.toMap(notifyXml);
        if(null==notifyParams){
        	 return wePayService.notifyNotOk(AppConstants.NotifyMsg.PARAM_ISNULL);
        }
        if (wePayService.verifySign(notifyParams)){
            // TODO business logic
            logger.info("verify sign success: {}", notifyParams);
            return wePayService.notifyOk();
        } else {
            logger.error("verify sign failed: {}", notifyParams);
            return wePayService.notifyNotOk("签名失败");
        }
    }
    
    /**
     *  支付结果异步通知
     *  此Url是在alipay.properties中配置的
     * @param request 支付宝支付结果异步通知post请求
     * @return  按照支付结果异步通知中的描述，对支付结果中的业务内容进行1\2\3\4二次校验，
     *      校验成功后在response中返回success，校验失败返回failure
     */
    @ResponseBody
    @RequestMapping(value = "/aliNotify.do",method = RequestMethod.POST)
    public String aliPayNotify(HttpServletRequest request) {
        return alipayService.asynchronizationNotify(request);
    }



}
