<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.qs.pub.sync.mapper.SyncUserKeepMapper" >
  <resultMap id="BaseResultMap" type="com.qs.sync.model.SyncUserKeep" >
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_Id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
    <result column="one" jdbcType="INTEGER" property="one" />
    <result column="two" jdbcType="INTEGER" property="two" />
    <result column="three" jdbcType="INTEGER" property="three" />
    <result column="four" jdbcType="INTEGER" property="four" />
    <result column="five" jdbcType="INTEGER" property="five" />
    <result column="six" jdbcType="INTEGER" property="six" />
    <result column="seven" jdbcType="INTEGER" property="seven" />
    <result column="fifteen" jdbcType="INTEGER" property="fifteen" />
    <result column="thirty" jdbcType="INTEGER" property="thirty" />
    <result column="extend1" jdbcType="VARCHAR" property="extend1" />
    <result column="extend2" jdbcType="VARCHAR" property="extend2" />
    <result column="extend3" jdbcType="VARCHAR" property="extend3" />
    <result column="extend4" jdbcType="VARCHAR" property="extend4" />
    <result column="extend5" jdbcType="VARCHAR" property="extend5" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, app_id, create_date, one, two, three, four, five, six, seven, 
    fifteen, thirty, extend1, extend2, extend3, extend4, extend5
  </sql>
  <select id="selectByUserId" parameterType="map" resultType="com.qs.sync.model.SyncUserKeep">
    select 
    <include refid="Base_Column_List" />
    from dc_user_keep
    where user_id = #{user_id,jdbcType=INTEGER} and app_id = #{appId,jdbcType=VARCHAR}
  </select>
  <insert id="insert" parameterType="com.qs.sync.model.SyncUserKeep">
    insert IGNORE into  dc_user_keep (user_Id, user_name, 
      app_id, create_date, one, 
      two, three, four, five, 
      six, seven, fifteen, 
      thirty, extend1, extend2, 
      extend3, extend4, extend5
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{appId,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, #{one,jdbcType=INTEGER}, 
      #{two,jdbcType=INTEGER}, #{three,jdbcType=INTEGER}, #{four,jdbcType=INTEGER}, #{five,jdbcType=INTEGER}, 
      #{six,jdbcType=INTEGER}, #{seven,jdbcType=INTEGER}, #{fifteen,jdbcType=INTEGER}, 
      #{thirty,jdbcType=INTEGER}, #{extend1,jdbcType=VARCHAR}, #{extend2,jdbcType=VARCHAR}, 
      #{extend3,jdbcType=VARCHAR}, #{extend4,jdbcType=VARCHAR}, #{extend5,jdbcType=VARCHAR}
      )
  </insert>
 
  <update id="update" parameterType="com.qs.sync.model.SyncUserKeep">
    update dc_user_keep
    <set>
      <if test="one != null">
        one = ifnull(one,0) + #{one,jdbcType=INTEGER},
      </if>
      <if test="two != null">
        two = ifnull(two,0) + #{two,jdbcType=INTEGER},
      </if>
      <if test="three != null">
        three = ifnull(three,0) + #{three,jdbcType=INTEGER},
      </if>
      <if test="four != null">
        four = ifnull(four,0) + #{four,jdbcType=INTEGER},
      </if>
      <if test="five != null">
        five = ifnull(five,0) + #{five,jdbcType=INTEGER},
      </if>
      <if test="six != null">
        six = ifnull(six,0) + #{six,jdbcType=INTEGER},
      </if>
      <if test="seven != null">
        seven = ifnull(seven,0) + #{seven,jdbcType=INTEGER},
      </if>
      <if test="fifteen != null">
        fifteen = ifnull(fifteen,0) + #{fifteen,jdbcType=INTEGER},
      </if>
      <if test="thirty != null">
        thirty = ifnull(thirty,0) + #{thirty,jdbcType=INTEGER},
      </if>
    </set>
    where app_id = #{appId,jdbcType=INTEGER} 
    and user_id = #{userId,jdbcType=INTEGER} 
    and create_date = #{createDate,jdbcType=DATE}
  </update>
</mapper>