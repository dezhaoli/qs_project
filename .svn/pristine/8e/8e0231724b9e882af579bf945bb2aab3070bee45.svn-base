package com.qs.webside.activity.controller;

import com.qs.common.base.basecontroller.BaseController;
import com.qs.common.constant.AppConstants;
import com.qs.common.constant.Constants;
import com.qs.webside.activity.model.ActiAward;
import com.qs.webside.activity.model.ActiAwardRecord;
import com.qs.webside.activity.model.ActiIntegral;
import com.qs.webside.activity.service.IActiAwardProService;
import com.qs.webside.activity.service.IActiAwardRecordService;
import com.qs.webside.activity.service.IActiAwardService;
import com.qs.webside.activity.service.IActiIntegralService;
import com.qs.webside.api.model.BaseRequest;
import com.qs.webside.util.AccessToken;
import com.qs.webside.util.ContextUtil;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.text.ParseException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by zun.wei on 2017/6/12 9:32.
 * Description:
 */
@Controller
@RequestMapping(value = "/api/actiAward/")
public class ActiAwardController extends BaseController {

    @Resource
    private IActiAwardService actiAwardService;

    @Resource
    private IActiAwardProService actiAwardProService;

    /**
     * @Author:zun.wei , @Date:2017/6/23 15:15
     * @Description:获取商品列表信息
     * @param baseRequest
     * @return
     */
    @ResponseBody
    @RequestMapping("getCommodityList.do")
    public Object getCommodityList(BaseRequest baseRequest) {
        AccessToken token = ContextUtil.getAccessTokenInfo(baseRequest.getSesskey());
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("mid", token.getMid());
        List<Map<String,Object>> actiAwardList = actiAwardService.queryListByPage(parameters);
        if (actiAwardList != null && actiAwardList.size() > 0) {
            return this.getReturnData(actiAwardList, AppConstants.Result.SUCCESS);
        } else {
            return this.getReturnData(actiAwardList, AppConstants.Result.FAILURE);
        }
    }

    /**
     * @Author:zun.wei , @Date:2017/9/19 16:02
     * @Description:大转盘抽奖接口
     * @param baseRequest
     * @return
     */
    @ResponseBody
    @RequestMapping("turntableLottery.do")
    public Object turntableLottery(BaseRequest baseRequest) throws ParseException {
        AccessToken token = ContextUtil.getAccessTokenInfo(baseRequest.getSesskey());
        Map<String, Object> aaps = actiAwardProService.executeLuckDraw(token.getMid(),baseRequest.getSesskey());
        if (aaps != null && aaps.size() > 0) {
            return this.getReturnData(aaps, AppConstants.Result.SUCCESS);
        } else {
            return this.getReturnData(aaps, AppConstants.Result.FAILURE);
        }
    }


}
