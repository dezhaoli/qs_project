<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

<!-- 	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:init.properties</value>
		</property>
	</bean> --> 
	
	<!--系统能够识别相应的注解-->
	<context:annotation-config />
	
	<!-- webside的数据源 -->
	<bean id="websideDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${webside.url}" />
		<property name="username" value="${webside.username}" />
		<property name="password" value="${webside.password}" />
		<property name="connectionProperties" value="${webside.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<property name="dataSource">
			<ref local="websideDataSource" />
			</property>
	</bean>
	
	<bean id="websideSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="websideDataSource" />
		
				<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/webside/**/*.xml" />
		
<!-- 		<property name="typeAliasesPackage" value="com.qs.webside.*.model" />
		 <property name="configLocation">  
       		 <value>classpath:MybatisConfig.xml</value>  
   		 </property>   -->
	</bean>
	
	<bean id="websidesqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="websideSqlSessionFactory"/>  
    </bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="websideSqlSessionFactory"/>
		<property name="basePackage" value="com.qs.webside.**.mapper"/>
	</bean>
	
	<bean id="websideTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="websideDataSource" />
		<qualifier value="webside" />
	</bean>
	
	 <bean id="websideTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="websideTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>
	
	<bean id="websideAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="websideTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>
	
<!-- ============================================================================================================= -->
	
	 
	 <!-- 配置跑得快代理库数据源 -->
	<bean id="runfastAgentDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${runfastAgent.url}" />
		<property name="username" value="${runfastAgent.username}" />
		<property name="password" value="${runfastAgent.password}" />
		<property name="connectionProperties" value="${runfastAgent.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>
	
	<bean id="runfastAgentSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mainDynamicDataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/agent/**/*.xml" />
	   <!-- 	
	    <property name="typeAliasesPackage" value="com.wiseyq.agent.*.model" />
		<property name="configLocation">  
       		 <value>classpath:MybatisConfig.xml</value>  
   		 </property>  
   	   -->
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="runfastAgentSqlSessionFactory"/>
	    <property name="basePackage" value="com.qs.agent.**.mapper"/>
	</bean>
	
	<bean id="runfastAgentTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mainDynamicDataSource" />
		<qualifier value="runfastAgent" />
	</bean>
	
		<bean id="runfastAgentTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="runfastAgentTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>
	
	<bean id="runfastAgentAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="runfastAgentTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>

	<!-- <tx:annotation-driven transaction-manager="runfastAgentTransactionManager" />
	 -->
	 
	
		<!-- 配置跑得快日志库数据源 -->
	<bean id="runfastLogDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${runfastLog.url}" />
		<property name="username" value="${runfastLog.username}" />
		<property name="password" value="${runfastLog.password}" />
		<property name="connectionProperties" value="${runfastLog.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>
	
	<bean id="runfastLogSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="logDynamicDataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/log/**/*.xml" />
	   <!-- 	
	    <property name="typeAliasesPackage" value="com.wiseyq.log.*.model" />
		<property name="configLocation">  
       		 <value>classpath:MybatisConfig.xml</value>  
   		 </property>  
   	   -->
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="runfastLogSqlSessionFactory"/>
	    <property name="basePackage" value="com.qs.log.**.mapper"/>
	</bean>
	
	<bean id="runfastLogTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="logDynamicDataSource" />
		<qualifier value="runfastLog" />
	</bean>
	
		<bean id="runfastLogTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="runfastLogTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>
	
	<bean id="runfastLogAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="runfastLogTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>

	<!-- <tx:annotation-driven transaction-manager="runfastLogTransactionManager" />
	 -->
	 
	 
	 
	 <!-- 配置麻将代理库数据源 -->
	<bean id="majiangAgentDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${majiangAgent.url}" />
		<property name="username" value="${majiangAgent.username}" />
		<property name="password" value="${majiangAgent.password}" />
		<property name="connectionProperties" value="${majiangAgent.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>
	
	<bean id="majiangAgentSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mainDynamicDataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/agent/**/*.xml" />
	   <!-- 	
	    <property name="typeAliasesPackage" value="com.wiseyq.agent.*.model" />
		<property name="configLocation">  
       		 <value>classpath:MybatisConfig.xml</value>  
   		 </property>  
   	   -->
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="majiangAgentSqlSessionFactory"/>
	    <property name="basePackage" value="com.qs.agent.**.mapper"/>
	</bean>
	
	<bean id="majiangAgentTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mainDynamicDataSource" />
		<qualifier value="majiangAgent" />
	</bean>
	
		<bean id="majiangAgentTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="majiangAgentTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>
	
	<bean id="majiangAgentAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="majiangAgentTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>

	<!-- <tx:annotation-driven transaction-manager="majiangAgentTransactionManager" />
	 -->
	 
	
		<!-- 配置麻将日志库数据源 -->
	<bean id="majiangLogDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${majiangLog.url}" />
		<property name="username" value="${majiangLog.username}" />
		<property name="password" value="${majiangLog.password}" />
		<property name="connectionProperties" value="${majiangLog.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>
	
	<bean id="majiangLogSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="logDynamicDataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/log/**/*.xml" />
	   <!-- 	
	    <property name="typeAliasesPackage" value="com.wiseyq.log.*.model" />
		<property name="configLocation">  
       		 <value>classpath:MybatisConfig.xml</value>  
   		 </property>  
   	   -->
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="majiangLogSqlSessionFactory"/>
	    <property name="basePackage" value="com.qs.log.**.mapper"/>
	</bean>
	
	<bean id="majiangLogTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="logDynamicDataSource" />
		<qualifier value="majiangLog" />
	</bean>
	
		<bean id="majiangLogTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="majiangLogTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>
	
	<bean id="majiangLogAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="majiangLogTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>



	<!-- 配置斗牛代理库数据源 -->
	<bean id="bullAgentDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${bullAgent.url}" />
		<property name="username" value="${bullAgent.username}" />
		<property name="password" value="${bullAgent.password}" />
		<property name="connectionProperties" value="${bullAgent.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
				  value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>

	<bean id="bullAgentSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mainDynamicDataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/agent/**/*.xml" />
		<!--
         <property name="typeAliasesPackage" value="com.wiseyq.agent.*.model" />
         <property name="configLocation">
                 <value>classpath:MybatisConfig.xml</value>
             </property>
           -->
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="bullAgentSqlSessionFactory"/>
		<property name="basePackage" value="com.qs.agent.**.mapper"/>
	</bean>

	<bean id="bullAgentTransactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mainDynamicDataSource" />
		<qualifier value="bullAgent" />
	</bean>

	<bean id="bullAgentTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="bullAgentTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>

	<bean id="bullAgentAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="bullAgentTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>


	<!-- 配置斗牛日志库数据源 -->
	<bean id="bullLogDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${bullLog.url}" />
		<property name="username" value="${bullLog.username}" />
		<property name="password" value="${bullLog.password}" />
		<property name="connectionProperties" value="${bullLog.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
				  value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>

	<bean id="bullLogSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="logDynamicDataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/log/**/*.xml" />
		<!--
         <property name="typeAliasesPackage" value="com.wiseyq.log.*.model" />
         <property name="configLocation">
                 <value>classpath:MybatisConfig.xml</value>
             </property>
           -->
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="bullLogSqlSessionFactory"/>
		<property name="basePackage" value="com.qs.log.**.mapper"/>
	</bean>

	<bean id="bullLogTransactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="logDynamicDataSource" />
		<qualifier value="bullLog" />
	</bean>

	<bean id="bullLogTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="bullLogTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>

	<bean id="bullLogAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="bullLogTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>


<!-- =====================================mushi  DB  Strat======================================== -->

<!-- mushi db -->
<bean id="mushiDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${mushi.url}" />
		<property name="username" value="${mushi.username}" />
		<property name="password" value="${mushi.password}" />
		<property name="connectionProperties" value="${mushi.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
				  value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>
	<bean id="mushiSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mainDynamicDataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/agent/**/*.xml" />
		<!--
         <property name="typeAliasesPackage" value="com.wiseyq.agent.*.model" />
         <property name="configLocation">
                 <value>classpath:MybatisConfig.xml</value>
             </property>
           -->
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="mushiSqlSessionFactory"/>
		<property name="basePackage" value="com.qs.agent.**.mapper"/>
	</bean>

	<bean id="mushiTransactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mainDynamicDataSource" />
		<qualifier value="mushi" />
	</bean>

	<bean id="mushiTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="mushiTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>

	<bean id="mushiAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="mushiTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>

<!-- 配置斗牛日志库数据源 -->
	<bean id="mushiLogDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${mushiLog.url}" />
		<property name="username" value="${mushiLog.username}" />
		<property name="password" value="${mushiLog.password}" />
		<property name="connectionProperties" value="${mushiLog.datasource.driverClassName}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
				  value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>

	<bean id="mushiLogSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="logDynamicDataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/log/**/*.xml" />
		<!--
         <property name="typeAliasesPackage" value="com.wiseyq.log.*.model" />
         <property name="configLocation">
                 <value>classpath:MybatisConfig.xml</value>
             </property>
           -->
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="mushiLogSqlSessionFactory"/>
		<property name="basePackage" value="com.qs.log.**.mapper"/>
	</bean>

	<bean id="mushiLogTransactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="logDynamicDataSource" />
		<qualifier value="bullLog" />
	</bean>

	<bean id="mushiLogTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="mushiLogTransactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>

	<bean id="mushiLogAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="mushiLogTxInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>
	<!-- 	======================mushi end===========================-->

	<!-- ==========================================配置动态数据源================================================ -->
	<!-- 配置动态数据源 -->
	<bean id="logDynamicDataSource" class="com.qs.log.game.util.LogDataSources">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="runfastLogDataSource" key="runfastLogDataSource"/>
				<entry value-ref="majiangLogDataSource" key="majiangLogDataSource"/>
				<entry value-ref="bullLogDataSource" key="bullLogDataSource"/>
				<entry value-ref="mushiLogDataSource" key="mushiLogDataSource"/>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="runfastLogDataSource"/>
	</bean>
	<bean id="mainDynamicDataSource" class="com.qs.log.game.util.MainDataSources">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="runfastAgentDataSource" key="runfastAgentDataSource"/>
				<entry value-ref="majiangAgentDataSource" key="majiangAgentDataSource"/>
				<entry value-ref="bullAgentDataSource" key="bullAgentDataSource"/>
				<entry value-ref="mushiDataSource" key="mushiDataSource"/>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="runfastAgentDataSource"/>
	</bean>
	<!-- ==========================================配置动态数据源================================================= -->
	 
	 
</beans>
