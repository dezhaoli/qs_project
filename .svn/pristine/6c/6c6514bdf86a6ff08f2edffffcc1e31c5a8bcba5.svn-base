package com.qs.webside.agent.service.impl;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.qs.webside.agent.service.IMemberPayMentService;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;

import com.qs.common.constant.CommonContants;
import com.qs.webside.member.mapper.MemberFidesMapper;
import com.qs.webside.member.mapper.MemberPayMentMapper;
import com.qs.webside.member.model.MemberAgents;
import com.qs.webside.member.model.MemberFides;
import com.qs.webside.member.model.MemberPayMent;
import com.qs.webside.agent.service.IMemberAgentService;

@Service
public class MemberPayMentServiceImpl implements IMemberPayMentService {

	@Resource
	private MemberPayMentMapper memberPayMentMapper;
	
	@Resource
	private IMemberAgentService memberAgentService;
	
	@Resource
	private MemberFidesMapper memberFidesMapper;
	@Override
	public int deleteByPrimaryKey(Integer pid) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int insert(MemberPayMent record) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int insertSelective(MemberPayMent record) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public MemberPayMent selectByPrimaryKey(Integer pid) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int updateByPrimaryKeySelective(MemberPayMent record) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int updateByPrimaryKey(MemberPayMent record) {
		// TODO Auto-generated method stub
		return 0;
	}

	/**
	 * 根据type 类型来查询1,2,3级团队
	 * 明细
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<MemberPayMent> queryListByPage(Map<String, Object> parameter) {
		List<MemberPayMent> resultList=null;
		String mids="";
		if (parameter !=null){
			
			if (parameter.containsKey("type")){


				//一级团队
				if (parameter.get("type").equals(CommonContants.ONE_TEMPE)){
					resultList=memberPayMentMapper.queryListByPage(parameter);
					if (resultList !=null) {

						for (MemberPayMent memberPayMent : resultList) {
							Object fMid=memberPayMent.getFmid();
							MemberFides memberFides=memberFidesMapper.selectByPrimaryKey(Integer.valueOf(fMid.toString()));
							memberPayMent.setName(memberFides.getName());
						}
					}
				}

				//二级团队
				if (parameter.get("type").equals(CommonContants.TOW_TEMPE)){

					if(parameter.containsKey("mid")){
						Object mid=parameter.get("mid");

						List< MemberAgents> mbgList=memberAgentService.getMemberAgentsInfoByParentId(mid.toString());
						if (mbgList !=null) {

							for (MemberAgents memberAgents : mbgList) {
								mids+=memberAgents.getMid().toString()+",";
							}
						}
						if (!"".equals(mids)){
							mids=mids.substring(0, mids.length()-1);
							parameter.put("mids", mids);
							parameter.put("mid", mid);
							resultList=memberPayMentMapper.queryListByPage(parameter);
							for (MemberPayMent memberPayMent : resultList) {
								Object fMid=memberPayMent.getFmid();
								MemberFides memberFides=memberFidesMapper.selectByPrimaryKey(Integer.valueOf(fMid.toString()));
								if (memberFides != null){

									memberPayMent.setName(memberFides.getName());
								}
							}
						}

					}
				}
				//三级团队
				if (parameter.get("type").equals(CommonContants.HTREE_TEMPE)){
					resultList=memberPayMentMapper.queryListByPage(parameter);
					if (resultList !=null) {

						for (MemberPayMent memberPayMent : resultList) {
							Object fMid=memberPayMent.getFmid();
							MemberFides memberFides=memberFidesMapper.selectByPrimaryKey(Integer.valueOf(fMid.toString()));
							memberPayMent.setName(memberFides.getName());
						}
					}
				}
			}
		}
		return resultList;
	}

	@Override
	public List<MemberPayMent> queryListByMidDate(Map<String, Object> parameters) {
		return memberPayMentMapper.queryListByMidDate(parameters);
	}

	@Override
	public List<MemberPayMent> queryListByMidInfo(Map<String, Object> parameters) {
		List<MemberPayMent> list=memberPayMentMapper.queryListByMidInfo(parameters);
		return list;
	}

	@Override
	public List<Map<String, Object>> queryChangeByDate(Map<String, Object> parameters) {
		return memberPayMentMapper.queryChangeByDate(parameters);
	}

	@Override
	public List<Map<String, Object>> queryOrderCountByPage(Map<String, Object> parameters) {
		return memberPayMentMapper.queryOrderCountByPage(parameters);
	}

	@Override
	public List<Map<String, Object>> queryOrderDetailByPage(Map<String, Object> parameters) {
		return memberPayMentMapper.queryOrderDetailByPage(parameters);
	}

	@Override
	public Float queryChangeNowDay() {
		return memberPayMentMapper.queryChangeNowDay();
	}

	@Override
	public Float queryOrderNowDayPayCount() {
		return memberPayMentMapper.queryOrderNowDayPayCount();
	}

	@Override
	public Float queryOrderPayCountByDate(Map<String, Object> parameters) {
		return memberPayMentMapper.queryOrderPayCountByDate(parameters);
	}

	@Override
	public Float queryChangeCountByDate(Map<String, Object> parameters) {
		return memberPayMentMapper.queryChangeCountByDate(parameters);
	}

}
