package com.qs.webside.game.service.impl;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;
import com.qs.webside.game.mapper.MemberinviteMapper;
import com.qs.webside.game.mapper.MobileVersionMapper;
import com.qs.webside.game.model.BaseParam;
import com.qs.webside.game.model.Memberinvite;
import com.qs.webside.game.model.MobileVersion;
import com.qs.webside.game.service.GameService;
import com.qs.common.constant.CacheConstan;
import com.qs.webside.game.mapper.BaseParamMapper;


@Service("gameService")
public class GameServiceImpl implements GameService {
	
	@Autowired
	private MobileVersionMapper mobileVersionMapper;
	
	@Autowired
	private MemberinviteMapper memberinviteMapper;
	
	@Autowired
	private BaseParamMapper baseParamMapper;
	
	@Override
	public MobileVersion findLatestMobileVersion(Map<String, Object> map) {
		return mobileVersionMapper.findLatestMobileVersion(map);
	}

	@Override
	public Memberinvite findByInviteCode(String code) {
		return memberinviteMapper.findByInviteCode(code);
	}

	@Override
	public int saveInviteBind(int mid, int invite) {
		
		return 0;
	}

	@Override
	@Cacheable(value={CacheConstan.BASEPARAM_CACHE_STORE_NAME},key="#root.methodName+':'+#root.args[0]")
	public BaseParam getBaseParamByCode(String code) {
		return baseParamMapper.getBaseParamByCode(code);
	}
	
	
	@Override
	public String getBaseParamValueByCode(String code) {
		BaseParam  param=this.getBaseParamByCode(code);
		String paramValue="";
		if(null!=param){
			paramValue=param.getValue();
		}
		return paramValue;
	}


}
