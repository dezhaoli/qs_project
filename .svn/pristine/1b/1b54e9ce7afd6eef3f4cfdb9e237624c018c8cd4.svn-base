package com.qs.webside.member.mapper;

import com.qs.common.base.basemapper.IBaseMapper;
import com.qs.webside.member.model.MemberAgents;

import java.util.List;
import java.util.Map;

public interface MemberAgentsMapper extends IBaseMapper {

    int deleteByPrimaryKey(Integer id);

    int insert(MemberAgents record);

    int insertSelective(MemberAgents record);

    MemberAgents selectByPrimaryKey(Integer id);

    int updateByPrimaryKeySelective(MemberAgents record);

    int updateByPrimaryKey(MemberAgents record);

    MemberAgents selectByMid(Integer mid);


    Map<String, Object> getAgentInfoAndBizInfoByMid(Integer mid);

    /**
     * 根据代理商所属id查询以及代理名下的所有代理商条数。
     * @param belongid
     * @return Integer total = map.get("total");
     */
    Map<String, Object> queryFirstAgentCountByBelongId(Integer belongid);

    /**
     * 获取商务专员绑定的一级代理商充值列表
     * @param belongid
     * @return
     */
    //List<Map<String, Object>> queryFirstAgentByBelongIdPage(Map<String,Object> belongid);

    /**
     * 根据mid获取代理商信息
     *
     * @param parameters
     * @return
     */
    Map<String, Object> getAgentBusinessInfoByMid(Map<String, Object> parameters);

    /**
     * 根据mid获取代理商真实名字
     * @param mid
     * @return
     */
    String getAgentRealNameByMid(Integer mid);

    /**
     *  获取商务id下面的一级代理商所有子代理商总条数
     * @param firstMidBelongId
     * @return
     */
    Integer getChildrenAgentsCount(Map<String, Object> firstMidBelongId);

    /**
     * 根据商务ID和直属代理商ID获取当前直属代理商所有子级代理商
     * @param firstMidBelongId
     * @return
     */
    //List<Map<String, Object>> getChildrenAgentsList(Map<String, Object> firstMidBelongId);

    /**
     *  根据siteMid获取代理商信息
     * @param sitemid
     * @return
     */
    MemberAgents getMemberAgentsInfoBySitemid(String sitemid);

    /**
     * 根据parent_id获取代理商信息
     * @param parent_id
     * @return
     */
    List<MemberAgents> getMemberAgentsInfoByParentId(String parent_id);

    /**
     *  检查代理商是否绑定了商务专员
     * @param parameters
     * @return
     */
    MemberAgents findByBelongidAndMid(Map<String, Object> parameters);

    /**
     *  获取代理商以及绑定商务信息
     * @param mid
     * @return
     */
    //Map<String, Object> getAgentAndBusizInfoByMid(Map<String,Object> mid);


    /**
     * 直属会员查询信息
     *
     * @param parameters
     * @return
     */
    List<MemberAgents> selectVipDirectlyInfo(Map<String, Object> parameters);

    /**
     * 获取一级代理商最大值code，此处返回已经是最大值，即已经进行 +1操作
     * @return
     */
    String getFirstAgentCode();

    /**
     * 根据mid获取最大code
     * @param mid
     * @return
     * @author:zyy
     * @time:2017年3月29日
     */
    String getMaxAgentsCodeBymMid(Integer mid);
    
    /**
     * 通过商务查询代理商下的充值与团队人数，根据实际与mid 
     * @param param
     * @return
     * @author:zyy
     * @time:2017年4月10日
     */
    List<Map<String,Object>> getBusTOAgentCountInfo(Map <String,Object> param);
    
    /**
     * 根据mid 来更新代理商信息
     * @param record
     * @return 更新行数
     * @author:zyy
     * @time:2017年4月28日
     */
    int updateByMid(MemberAgents record);
    
    /**
     * 检查该mid 于parent_id是否已经是代理商
     * @param parma
     * @return 开通代理商的mid
     * @author:zyy
     * @time:2017年5月2日
     */
    Integer getIsAgentEmpower(Map<String ,Object> parma);

    /**
     * @Author:zun.wei , @Date:2017/6/12 13:44
     * @Description:查询代理商下面所有parent_id等于指定的mid的代理商
     * @param parentId
     * @return
     */
    int getCountAgentsByParentId(int parentId);

}