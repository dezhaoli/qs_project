package com.qs.webside.activity.service.impl;

import com.qs.common.constant.CacheConstan;
import com.qs.mainku.game.model.MemberFides;
import com.qs.mainku.game.service.IMemberFidesService;
import com.qs.webside.activity.mapper.ActiIntegralMapper;
import com.qs.webside.activity.model.ActiIntegral;
import com.qs.webside.activity.service.IActiIntegralService;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * Created by zun.wei on 2017/6/8 19:10.
 * Description:活动中心积分表
 */
@Service
public class ActiIntegralServiceImpl implements IActiIntegralService {

    @Resource
    private ActiIntegralMapper actiIntegralMapper;

    @Resource
    private IMemberFidesService memberFidesService;


    @Override
    public int deleteByPrimaryKey(Integer id) {
        return actiIntegralMapper.deleteByPrimaryKey(id);
    }

    @Override
    public int insert(ActiIntegral record) {
        return actiIntegralMapper.insert(record);
    }

    @Override
    public int insertSelective(ActiIntegral record) {
        return actiIntegralMapper.insertSelective(record);
    }

    @Override
    public ActiIntegral selectByPrimaryKey(Integer id) {
        return actiIntegralMapper.selectByPrimaryKey(id);
    }

    @Override
    public int updateByPrimaryKeySelective(ActiIntegral record) {
        return actiIntegralMapper.updateByPrimaryKeySelective(record);
    }

    @Override
    public int updateByPrimaryKey(ActiIntegral record) {
        return actiIntegralMapper.updateByPrimaryKey(record);
    }

    /**
     * @Author:zun.wei , @Date:2017/6/30 9:24
     * @Description:缓存积分排行榜，定时30分钟失效。
     * @param parameters
     * @return
     */
    @Override
    @Cacheable(value = {CacheConstan.INTEGRAL_RANKING_CACHE_NAME},key="#root.methodName+'SortList:'")
    public List<Map<String,Object>> queryListByPage(Map<String, Object> parameters) {
        List<Map<String, Object>> actiIntegralList = actiIntegralMapper.queryListByPage(parameters);
        List<Map<String, Object>> returnList = new ArrayList<>();
        if (actiIntegralList != null && actiIntegralList.size() > 0) {
            for (Map<String, Object> actiIntegral : actiIntegralList) {
                MemberFides memberFides = memberFidesService.selectByPrimaryKey(Integer.parseInt(actiIntegral.get("mid") + ""));
                if (memberFides != null) {
                    actiIntegral.put("name", memberFides.getName());
                    actiIntegral.put("icon", memberFides.getIcon());
                }
                returnList.add(actiIntegral);
            }
        }
        return returnList;
    }

    @Override
    public ActiIntegral selectByMid(Integer mid) {
        return actiIntegralMapper.selectByMid(mid);
    }

}
