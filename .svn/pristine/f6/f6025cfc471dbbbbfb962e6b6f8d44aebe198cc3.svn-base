package com.qs.webside.business.controller;

import com.alibaba.fastjson.JSON;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import com.qs.common.base.basecontroller.BaseController;
import com.qs.common.common.Common;
import com.qs.common.dtgrid.model.Pager;
import com.qs.common.exception.SystemException;
import com.qs.common.util.PageUtil;
import com.qs.pub.game.model.MemberBusiness;
import com.qs.pub.game.service.IBusinessService;
import com.qs.webside.game.model.MobileVersion;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 *
 * Created by zun.wei on 2017/3/16.
 * To change this template use File|Default Setting
 * |Editor|File and Code Templates|Includes|File Header
 */
@Controller
@RequestMapping(value = "/agentQuery/")
public class AgentsQueryController extends BaseController {

    @Resource
    private IBusinessService businessService;


    /**
     * 代理商查询页面
     */
    @RequestMapping(value = "queryAgentsUi.html",method = RequestMethod.GET)
    public String queryAgentsUi(HttpSession session, Model model, HttpServletRequest request){
        Integer nowUserId = null;
        try {
            nowUserId = ((MemberBusiness) session.getAttribute("user")).getId();
        } catch (Exception e) {

        }
        //TODO　 先默认一个nowUserId
        if (nowUserId == null) nowUserId = 1;

        PageUtil page = super.getPage(request);
        model.addAttribute("page", page);

        Map<String, Object> totalMap = businessService.queryFirstAgentCountByBelongId(nowUserId);
        Integer total = Integer.parseInt(totalMap.get("total") + "");
        model.addAttribute("totalAgent", total);
        model.addAttribute("belongid", nowUserId);
        return "/WEB-INF/view/web/business/agent_query_list";
    }


    /**
     * 查询代理商
     * @param gridPager
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "queryAgentList.html", method = RequestMethod.POST)
    public Object queryAgentsUi(String gridPager) {
        Map<String,Object> parameters = null;
        // 映射Pager对象
        Pager pager = JSON.parseObject(gridPager, Pager.class);
        // 判断是否包含自定义参数
        parameters = pager.getParameters();
        if (parameters.size() < 0) {
            parameters.put("belongid", null);
        }
        // 设置分页，page里面包含了分页信息
        Page<Object> page = PageHelper.startPage(pager.getNowPage(),pager.getPageSize());
        List<Map<String, Object>> agentList = businessService.queryFirstAgentByBelongIdPage(parameters);
        return getReturnPage(pager, page, agentList);
    }

    /**
     * 直属代理商详情页面
     * @param model
     * @param request
     * @param id
     * @return
     */
    @RequestMapping(value = "showAgentDetailPageUI.html",method = RequestMethod.GET)
    public String showAgentDetailPageUI(Model model, HttpServletRequest request, Integer id) {
        try {
            Map<String, Object> record = businessService.getAgentDetailInfoByMid(id);
            PageUtil page = new PageUtil(request);
            model.addAttribute("page", page);
            model.addAttribute("record", record);
            return "/WEB-INF/view/web/business/agent_detail_show";
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }

    /**
     *
     * @param model
     * @param request
     * @param id
     * @return
     */
  /*  @RequestMapping(value = "queryChildrenAgentUI.html",method = RequestMethod.GET)
    public String queryChildrenAgentUI(Model model, HttpServletRequest request, Integer id) {
        try {
            MobileVersion record = mobileVersionService.selectById(id);
            PageUtil page = new PageUtil(request);
            model.addAttribute("page", page);
            model.addAttribute("record", record);
            return Common.BACKGROUND_PATH + "/web/mobile/mobile_version_form";
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }*/


}
