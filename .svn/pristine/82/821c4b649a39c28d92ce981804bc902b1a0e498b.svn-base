package com.qs.webside.util;

import com.qs.datasource.DataSourceSwitch;
import com.qs.datasource.util.ConstantUtil;
import com.qs.datasource.util.DataSourcesUtil;
import com.qs.pub.game.model.MemberBusiness;
import com.qs.webside.shiro.ShiroAuthenticationManager;

import javax.annotation.Resource;

import org.apache.shiro.SecurityUtils;

/**
 * //@Author:zun.wei, @Date:2017/4/21 20:04
 *
 * Created by zun.wei on 2017/4/21.
 * To change this template use File|Default Setting
 * |Editor|File and Code Templates|Includes|File Header
 */
public class BusinessDataSourceUtil {

    @Resource
    private DataSourcesUtil dataSourcesUtil;

    public Integer getGameType() {
    	MemberBusiness memberBusiness = (MemberBusiness)SecurityUtils.getSubject().getPrincipal();
        return Integer.parseInt
                (dataSourcesUtil.getKey(ConstantUtil.BUSINESS_GAME_TYPE_SESSION_KEY + memberBusiness.getId()));
    }

    public void setWriteAllDataSourceType() {
        clearAllDynamicDataSource();
        DataSourceSwitch.setMainDataSourceType //主库写
                (dataSourcesUtil.getDataBaseName(ConstantUtil.ReadWrite.Write, getGameType(), null));
        DataSourceSwitch.setLogDataSourceType //日志库写
                (dataSourcesUtil.getDataBaseName(ConstantUtil.ReadWrite.Write, getGameType(), ConstantUtil.TypeCode.LOG));
    }

    public void setReadAllDataSourceType() {
        clearAllDynamicDataSource();
        DataSourceSwitch.setMainDataSourceType //主库读
                (dataSourcesUtil.getDataBaseName(ConstantUtil.ReadWrite.READ, getGameType(), null));
        DataSourceSwitch.setLogDataSourceType //日志库读
                (dataSourcesUtil.getDataBaseName(ConstantUtil.ReadWrite.READ, getGameType(), ConstantUtil.TypeCode.LOG));
    }

    public void setReadLogDataSourceType() {
        clearAllDynamicDataSource();
        DataSourceSwitch.setLogDataSourceType //日志库读
                (dataSourcesUtil.getDataBaseName(ConstantUtil.ReadWrite.READ, getGameType(), ConstantUtil.TypeCode.LOG));
    }

    public void setReadMainDataSourceType() {
        clearAllDynamicDataSource();
        DataSourceSwitch.setMainDataSourceType //主库读
                (dataSourcesUtil.getDataBaseName(ConstantUtil.ReadWrite.READ, getGameType(), null));
    }

    public void setWriteLogDataSourceType() {
        clearAllDynamicDataSource();
        DataSourceSwitch.setLogDataSourceType //日志库读
                (dataSourcesUtil.getDataBaseName(ConstantUtil.ReadWrite.Write, getGameType(), ConstantUtil.TypeCode.LOG));
    }

    public void setWriteMainDataSourceType() {
        clearAllDynamicDataSource();
        DataSourceSwitch.setMainDataSourceType //主库读
                (dataSourcesUtil.getDataBaseName(ConstantUtil.ReadWrite.Write, getGameType(), null));
    }

    /**
     * 清空线程中的数据源,在不需要切换数据源的时候调用此方法。
     */
    public void clearAllDynamicDataSource() {
        DataSourceSwitch.clearCfgDataSourceType();
        DataSourceSwitch.clearLogDataSourceType();
        DataSourceSwitch.clearMainDataSourceType();
    }

}
