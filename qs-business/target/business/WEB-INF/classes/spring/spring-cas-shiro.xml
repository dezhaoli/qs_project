<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context 
		classpath:org/springframework/context/config/spring-context-4.0.xsd">  
    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:cas-ehcache.xml"/>
    </bean>


    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 	
       <bean id="redisManager" class="com.apusic.ausp.common.jedis.RedisManager" init-method="init">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="expire" value="${redis.expire}" />
		<property name="database" value="${redis.database}" />
		
	</bean>

	<bean id="redisSessionDAO" class="com.apusic.ausp.common.jedis.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<bean id="cacheManager" class="com.apusic.ausp.common.jedis.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean> 
	-->
    

	<!-- 构造sessionManager begin -->
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="7200000" />
	</bean>

	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="7200000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>



	<!-- sessionManager -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="7200000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
		<property name="sessionDAO" ref="sessionDAO" />
	</bean>
	<!-- 构造sessionManager end -->

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="sessionMode" value="native" />
<!-- 		<property name="realm" ref="userRealm" /> -->
		<property name="realm" ref="casRealm" />
		<property name="sessionManager" ref="sessionManager" /> 
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="com.qs.shiro.filter.MyFormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<property name="loginUrl" value="/login/index.do" />
		<property name="successUrl" value="/index.html" />
	</bean>


	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="${cas.server.url}/login?service=${app.service.url}/login/index.do" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="casFilter"/>
				<!-- <entry key="accessToken" value-ref="accessTokenFilter"></entry> -->
				<entry key="myCasFiter" value-ref="myCasFiter"></entry>
				<entry key="logout" value-ref="logout"></entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/**/images/** = anon
				/**/styles/** = anon
				/**/*.png = anon
				/**/*.ico = anon
				/**/*.gif = anon
				/**/*.jpeg = anon
				/**/*.jpg = anon
				/**/*.css = anon
			   <!--  /permission/function/findRoot.do=perms[permission:function:findRoot]  -->
			    /permission/permi/checkPermission.do=anon
			    /permission/permi/checkAdminRole.do=anon
			    /permission/permi/checkRole.do=anon
			    /log/operation/save.do=anon
			    /auth/authorize.do=anon
			    /auth/myAuthorize.do=anon
			    /sync/error/save.do=anon
			    /auth/getValidateCode.do=anon
			    /orgman/user/findUserAndVisitCount.do=anon
			    /orgman/orgunit/querySecondLevelDept.do=anon
			    /login/index.do= authc
			    /auth/logout.do= anon
			    /logout = logout 
			   <!--  /**=myCasFiter,accessToken -->
			  /**=myCasFiter
			</value>
		</property>
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	
		<!-- 项目自定义的Realm -->
	<bean id="casRealm" class="com.qs.shiro.realm.ShiroCasRealm" >
		<property name="defaultRoles" value="ROLE_USER"/> 
		<property name="casServerUrlPrefix" value="${cas.server.url}" />
		<!--客户端的回调地址设置，必须和上面的shiro-cas过滤器拦截的地址一致 -->
		<property name="casService" value="${app.service.url}/login/index.do"/>
	</bean>

	
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
	    <property name="failureUrl" value="/error.html"/>
		<property name="loginUrl" value="${cas.server.url}/login?service=${app.service.url}/login/index.do" />
		<property name="successUrl" value="/index.html" />
	</bean>

     <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter"> 
        <property name="redirectUrl" value="${cas.server.url}/logout?service=${app.service.url}" /> 
    </bean>
	   
    <bean id="myCasFiter" class="com.qs.shiro.filter.CasAllFilter">
    </bean>
</beans>